Wer ein Programmierprojekt angeht, wird früher oder später auch auf Git treffen. 
Wir haben dir eine einfache Übersicht über alle wichtigen Befehle zusammengestellt. 
Damit gelingt dein Einstieg garantiert.

Git ist ein Versionskontrollsystem, das im Bereich der Entwicklung unabdingbar geworden ist. 
Es hilft euch, die Übersicht über die Historie eures Codes zu behalten. Damit kann ein alter 
Stand einfach wieder hergestellt werden. Auch die Zusammenarbeit mit anderen Entwicklern 
wird dadurch vereinfacht.

Wer allerdings in das Thema einsteigt, kann sich schnell überfordert fühlen. Bevor du versuchst, 
dich auf den erstbesten grafischen Git-Client zu stürzen, solltest du Folgendes beachten: 
Sie haben häufig den Nachteil, dass du keinen richtigen Überblick über die ausgeführten Befehle hast. 
Wenn irgendwo etwas falsch ausgeführt wurde oder manuell angepasst werden muss, 
dann kannst du nur schwer eingreifen. Deshalb kann man alle nötigen Git-Befehle auch über das 
Terminal ausführen. Wir haben dir eine einfache Übersicht zusammengestellt mit allem, was du brauchst, 
damit dein Git-Einstieg gelingt.

Git-Projekt aufsetzen

Navigiere in deinem Terminal zu deinem Projekt beziehungsweise in das Verzeichnis, in dem dein Projekt liegen soll. Nun kannst du ein neues Git-Repository aufsetzen:

git init

Falls bereits ein lokales oder entferntes Repository existiert, kannst du es ganz einfach in den gewünschten Ordner kopieren.

# lokaler Klon
git clone /pfad/lokales/repo /pfad/ziel
# entfernter Klon
git clone https://gitExample.com/user/repository.git

Auch über SSH ist möglich, wenn du einen SSH-Key angelegt hast.

git clone user@server:/pfad.git

Remote Repositories

Generell werden erstmal alle Repositories, die nicht lokal sind, als Remote Repository bezeichnet. Dein geklontes Repository heißt origin. Du kannst zusätzlich weitere Repositories bekanntmachen, um damit Dateien auszutauschen.

# Fügt Repository von url mit name hinzu
git remote add name url
# Zeigt Liste aller bekanntgemachten Repositories
git remote

Falls du bislang nur mit git init ein lokales Repository erstellt hast, kannst du ein entferntes Repository bekanntmachen, indem du ein Remote Repository mit dem Namen origin hinzufügst.

git remote add origin https://gitExample.com/user/repository.git

Änderungen hochladen

Dein lokales Repository umfasst nicht nur deine Dateien. Es gibt den Head, der sich deinen letzten Commit merkt, sowie den Stage, wo deine Dateien landen, wenn du sie mit dem Add-Befehl vormerkst. Dateien in dein entferntes Repository kannst du folgendermaßen hochladen:
1. Geänderte Dateien zum Stage hinzufügen

git add datei # Fügt einzelne datei hinzu
git add * # Fügt alle geänderten Dateien hinzu

2. Commit mit Dateien aus dem Stage erstellen

git commit -m "nachricht"
# Der 1. Schritt kann übersprungen werden,
# wenn alle geänderten Dateien hinzugefügt werden sollen
git commit -a -m "nachricht"

3. Zum entfernten Repository pushen

# Pusht deinen Commit auf branch zum Repository remote
git push remote branch
# Pusht auf Master-Branch zum Origin-Repository
git push origin master
